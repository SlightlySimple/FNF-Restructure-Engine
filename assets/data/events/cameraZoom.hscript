function onEvent(event)
{
	FlxTween.cancelTweensOf(game, ["camZoom"]);
	camZoom = 0;
	switch (event.parameters.mode)
	{
		case "fromStage": camZoom = game.stage.stageData.camZoom + event.parameters.zoom;
		case "fromStageMultiplied": camZoom = game.stage.stageData.camZoom * event.parameters.zoom;
		case "fromCurrent": camZoom += event.parameters.zoom;
		default:
			if (event.parameters.zoom == 0)
				camZoom = game.stage.stageData.camZoom;
			else
				camZoom = event.parameters.zoom;
	}
	if (camZoom <= 0)
		camZoom = 0.001;
	if (event.parameters.time <= 0)
		game.camZoom = camZoom;
	else
	{
		var twn = FlxTween.tween(game, {camZoom: camZoom}, getTime(event.parameters.time, event.parameters.timeUnit), {ease: Reflect.field(FlxEase, event.parameters.ease)});
		twn._syncWithSong = true;
		twn._startTime = event.time;
	}
}

function getTime(time, unit)
{
	switch (unit)
	{
		case "beats": return time * Conductor.beatSeconds;
		case "steps": return time * Conductor.stepSeconds;
	}
	return time;
}