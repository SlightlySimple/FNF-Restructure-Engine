function create()
{
	for (e in game.songData.events)
	{
		if (e.type == "setScriptVariable" && e.parameters.init)
			eventGo(e);
	}
}

function onEvent(event)
{
	if (!event.parameters.init)
		eventGo(event);
}

function eventGo(event)
{
	var val = analyzeValue(event.parameters.value);
	if (event.parameters.variable.indexOf(".") > 0)
	{
		var varSplit = event.parameters.variable.split(".");
		var affect;
		if (varSplit[0].indexOf("[") > -1)
		{
			affect = game.hscriptIdGet(event.parameters.id, varSplit[0].split("[")[0]);
			affect = affect[analyzeArrayValue(varSplit[0].split("[")[1].split("]")[0])];
		}
		else
			affect = game.hscriptIdGet(event.parameters.id, varSplit[0]);
		if (varSplit.length > 2)
		{
			for (i in 1...varSplit.length - 1)
			{
				if (varSplit[i].indexOf("[") > -1)
				{
					affect = Reflect.getProperty(affect, varSplit[i].split("[")[0]);
					affect = affect[analyzeArrayValue(varSplit[i].split("[")[1].split("]")[0])];
				}
				else
					affect = Reflect.getProperty(affect, varSplit[i]);
			}
		}

		var prev = Reflect.getProperty(affect, varSplit[varSplit.length - 1]);
		var final = val;
		switch (event.parameters.operation)
		{
			case "add": final = prev + val;
			case "multiply": final = prev * val;
			case "divide": final = prev / val;
		}
		Reflect.setProperty(affect, varSplit[varSplit.length - 1], final);
	}
	else
	{
		var prev = game.hscriptIdGet(event.parameters.id, event.parameters.variable);
		var final = val;
		switch (event.parameters.operation)
		{
			case "add": final = prev + val;
			case "multiply": final = prev * val;
			case "divide": final = prev / val;
		}
		game.hscriptIdSet(event.parameters.id, event.parameters.variable, final);
	}
}

function analyzeValue(val)
{
	if (Std.parseFloat(val) != null && !Math.isNaN(Std.parseFloat(val)))
		return Std.parseFloat(val);

	if (val == "true")
		return true;

	if (val == "false")
		return false;

	return val;
}

function analyzeArrayValue(val)
{
	if (Std.parseInt(val) != null && !Math.isNaN(Std.parseInt(val)))
		return Std.parseInt(val);

	if (StringTools.startsWith(val, "\"") && StringTools.endsWith(val, "\""))
		return val.substr(1, val.length - 2);

	return val;
}