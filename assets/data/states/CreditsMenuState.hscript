function create()
{
	textBlocks = StringTools.replace(Paths.text('credits'), "\r", "").split("\n");

	credPages = [];
	for (t in textBlocks)
	{
		if (StringTools.startsWith(t, "!page ") && !credPages.contains(t.substr(6)))
			credPages.push(t.substr(6));
	}

	if (static.credPage == null)
		static.credPage = credPages[0];
	credPage = credPages.indexOf(static.credPage);
	credItem = 0;

	bg = new FlxSprite();
	add(bg);

	credSelection = new FlxSprite(70).makeGraphic(FlxG.width - 140, 1, FlxColor.BLACK);
	credSelection.alpha = 0.4;
	add(credSelection);

	credText = new FlxSpriteGroup();
	add(credText);
	refreshCredText();

	arrowLeft = new AnimatedSprite(0, 0, Paths.tiles("ui/arrow", 2, 1));
	arrowLeft.animation.add('idle', [0]);
	arrowLeft.animation.add('press', [1]);
	arrowLeft.playAnim('idle');
	arrowLeft.setPosition(15, (FlxG.height - arrowLeft.height) / 2);
	arrowLeft.flipX = true;
	if (credPages.length > 1)
		add(arrowLeft);

	arrowRight = new AnimatedSprite(0, 0, arrowLeft.frames);
	arrowRight.animation.add('idle', [0]);
	arrowRight.animation.add('press', [1]);
	arrowRight.playAnim('idle');
	arrowRight.setPosition(FlxG.width - arrowRight.width - 15, (FlxG.height - arrowRight.height) / 2);
	if (credPages.length > 1)
		add(arrowRight);

	nav = new UINumeralNavigation((credPages.length > 1 ? changePage : null), changeSelection, function() {
		if (credObjects[credItem].hyperlink != "")
			FlxG.openURL(credObjects[credItem].hyperlink);
	}, function() {
		static.credPage = credPages[credPage];
		GotoMenu();
	}, changeSelection);
	nav.leftClick = nav.accept;
	nav.rightClick = nav.back;
	add(nav);

	changeSelection(0);
}

function refreshCredText()
{
	credText.forEachAlive(function(t) { t.kill(); });

	var textSplit = [];

	var care = true;
	for (t in textBlocks)
	{
		if (StringTools.startsWith(t, "!page "))
			care = (t.substr(6) == credPages[credPage]);
		else if (care && StringTools.startsWith(t, "!bg "))
		{
			if (Paths.imageExists(t.substr(4)))
			{
				bg.loadGraphic(Paths.image(t.substr(4)));
				bg.setGraphicSize(Std.int(FlxG.width));
				bg.updateHitbox();
			}
		}
		else if (care && t != "")
			textSplit.push(t.split("|"));
	}

	var txtY = 80;
	credObjects = [];

	for (t in textSplit)
	{
		var newCredObject = {line: null, lineRight: null, text: t, hyperlink: ""};
		var textLine1 = credText.recycle(FlxText);
		textLine1.setPosition(80, txtY);
		textLine1.text = t[0];
		textLine1.setFormat("FNF Dialogue", 36, FlxColor.WHITE, LEFT, FlxTextBorderStyle.OUTLINE, FlxColor.BLACK);
		textLine1.fieldWidth = 0;
		textLine1.borderSize = 2;
		if (t.length <= 1)
		{
			textLine1.size = 48;
			textLine1.screenCenter(X);
			textLine1.borderSize = 3;
		}
		newCredObject.line = textLine1;
		credText.add(textLine1);

		if (t.length > 2)
			newCredObject.hyperlink = t[2];

		if (t.length > 1)
		{
			var textLine2 = credText.recycle(FlxText);
			textLine2.setPosition(FlxG.width - 80, txtY);
			textLine2.text = t[1];
			textLine2.setFormat("FNF Dialogue", 36, FlxColor.WHITE, RIGHT, FlxTextBorderStyle.OUTLINE, FlxColor.BLACK);
			textLine2.fieldWidth = FlxG.width * 0.6;
			textLine2.x -= textLine2.width;
			textLine2.borderSize = 2;
			newCredObject.lineRight = textLine2;
			credText.add(textLine2);
			txtY += Std.int(Math.max(textLine1.height, textLine2.height) + 8);
		}
		else
		{
			txtY += Std.int(textLine1.height + 8);
			if (textSplit.indexOf(t) > 0)
			{
				textLine1.y += 40;
				txtY += 40;
			}
		}

		credObjects.push(newCredObject);
	}

	maxHeight = Std.int(txtY + 120 - FlxG.height);
	credText.y = Math.min(0, Math.max(-maxHeight, credText.y));
}

function update(elapsed)
{
	if (credPages.length > 1)
	{
		if (Options.keyJustPressed("ui_right"))
			arrowRight.playAnim("press");

		if (Options.keyJustReleased("ui_right"))
			arrowRight.playAnim("idle");

		if (Options.keyJustPressed("ui_left"))
			arrowLeft.playAnim("press");

		if (Options.keyJustReleased("ui_left"))
			arrowLeft.playAnim("idle");
	}

	if (credObjects[credItem].line.y < FlxG.height / 3)
	{
		var credY = (FlxG.height / 3) - (credObjects[credItem].line.y - credText.y);
		credY = Math.min(0, Math.max(-maxHeight, credY));
		credText.y = FlxMath.lerp(credText.y, credY, elapsed * 5);
	}

	if (credObjects[credItem].line.y + credObjects[credItem].lineRight.height > FlxG.height * 2 / 3)
	{
		var credY = (FlxG.height * 2 / 3) - credObjects[credItem].lineRight.height - (credObjects[credItem].line.y - credText.y);
		credY = Math.min(0, Math.max(-maxHeight, credY));
		credText.y = FlxMath.lerp(credText.y, credY, elapsed * 5);
	}

	credSelection.y = credObjects[credItem].line.y - 10;
}

function changePage(val)
{
	credPage = Util.loop(credPage + val, 0, credPages.length - 1);

	refreshCredText();
	credItem = 0;
	changeSelection(0);
}

function changeSelection(val)
{
	credItem = Util.loop(credItem + val, 0, credObjects.length - 1);
	if (credObjects[credItem].text.length < 2)
	{
		if (val == 0)
			changeSelection(1);
		else
			changeSelection(val);
	}

	for (i in 0...credObjects.length)
	{
		credObjects[i].line.text = credObjects[i].text[0];
		if (i == credItem)
			credObjects[i].line.text = "> " + credObjects[i].line.text;
	}

	credSelection.setGraphicSize(credSelection.width, Math.max(credObjects[credItem].line.height, credObjects[credItem].lineRight.height) + 20);
	credSelection.updateHitbox();
}