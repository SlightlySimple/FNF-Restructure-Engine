function create()
{
	for (c in game.allCharacters)
	{
		var shader = new DropShadowShader();
		applySharedShaderValues(shader);

		if (c == game.gf)
		{
			shader.setAdjustColor(-42, -10, 5, -25);
			shader.distance = 3;
			shader.threshold = 0.3;
		}

		shader.attachedSprite = c;
		assignMask(c);
	}
}

function assignMask(character)
{
	var scriptId = "player" + Std.string(game.allCharacters.indexOf(character) + 1);
	if (character == game.gf)
		scriptId = "gf";

	var shader = character.shader;
	var maskPath = game.hscriptIdGet(scriptId, "maskPath");
	if (maskPath != null)
	{
		shader.altMaskImage = Paths.shaderImage(maskPath);
		var maskThreshold = game.hscriptIdGet(scriptId, "maskThreshold");
		if (maskThreshold != null)
			shader.maskThreshold = maskThreshold;
		else
			shader.maskThreshold = 1;
		shader.useAltMask = true;
	}
	else
		shader.useAltMask = false;
}

function applySharedShaderValues(shader)
{
	shader.setAdjustColor(-66, -10, 24, -23);
	shader.color = 0xFF52351D;
	shader.angle = 90;
	shader.antialiasAmt = 0;
	shader.distance = 5;
}

function onAnyEvent(event)
{
	if (event.type == "characterSwitch")
		assignMask(game.allCharacters[getSlot(event.parameters.id.toLowerCase())]);
}

function getSlot(str)
{
	if (StringTools.startsWith(str, "player") && Std.parseInt(str.substr("player".length)) - 1 < game.allCharacters.length)
		return Std.parseInt(str.substr("player".length)) - 1;
	if (str == "gf")
		return 2;

	return 0;
}